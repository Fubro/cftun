name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: '发布版本号 (例如: v1.0.0)'
        required: true
        type: string
      platforms:
        description: '目标平台 (用逗号分隔，格式：系统/架构)'
        required: true
        default: 'linux/amd64,linux/arm64,linux/arm,windows/amd64,windows/arm64,darwin/amd64,darwin/arm64'
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for build workflow
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: main
          check-name: build
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build

      - name: Generate file list
        id: generate_files
        run: |
          IFS=',' read -ra PLATFORMS <<< "${{ inputs.platforms }}"
          
          files=()
          required_files=""
          release_files=""
          
          for platform in "${PLATFORMS[@]}"; do
            # 解析系统和架构
            IFS='/' read -r sys arch <<< "$platform"
            
            if [ "$sys" = "windows" ]; then
              ext="zip"
            else
              ext="tar.gz"
            fi
            
            file="build/cftun-${sys}-${arch}.${ext}"
            files+=("$file")
            
            # 为 required_files 添加引号包裹的文件路径
            required_files+="\"$file\" "
            
            # 为 release_files 添加文件路径
            release_files+="$file"$'\n'
          done
          
          # 设置输出变量，移除最后的换行符
          echo "required_files=${required_files}" >> $GITHUB_OUTPUT
          echo "release_files<<EOF" >> $GITHUB_OUTPUT
          echo -n "${release_files}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Verify artifacts
        run: |
          required_files=(${{ steps.generate_files.outputs.required_files }})
          
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "错误: 找不到文件 $file"
              exit 1
            fi
          done
          echo "所有构建文件验证通过"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.version }}
          name: Release ${{ inputs.version }}
          files: ${{ steps.generate_files.outputs.release_files }} 